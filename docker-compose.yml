version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./prod.env
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGNAME}

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
            python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='${DJANGO_SUPERUSER_USERNAME}').exists() or User.objects.create_superuser('${DJANGO_SUPERUSER_USERNAME}', '${DJANGO_SUPERUSER_EMAIL}', '${DJANGO_SUPERUSER_PASSWORD}')\" &&
            gunicorn wishlist_project.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - media_data:/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./prod.env

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./prod.env
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./staticfiles:/app/staticfiles
      - media_data:/app/media
      - /etc/letsencrypt/live/${HOST}/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/${HOST}/privkey.pem:/etc/nginx/ssl/privkey.pem
    depends_on:
      - web

  # backup:
  #   build: ./backup
  #   volumes:
  #     - postgres_backup:/backups
  #   env_file:
  #     - ./prod.env
  #   depends_on:
  #     - db

volumes:
  postgres_data:
  media_data:
  postgres_backup: